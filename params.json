{"name":"Reforms","tagline":"Beautiful forms for Om","body":"# Time for Reforms has come! #\r\n\r\nI created this library because I grew tired using the same repetitive layout markup all over again for every new form I created. I needed something that would let me quickly create new forms that look great and support validation.\r\n\r\n**[Reforms](http://github.com/bilus/reforms)** lets you build beautiful forms compatible with [Om](https://github.com/omcljs/om), [Reagent](https://github.com/reagent-project/reagent) and [Rum](https://github.com/tonsky/rum). \r\n\r\nMarkup it generates is compatible with [Bootstrap 3](http://getbootstrap.com/) and [Font Awesome](http://fortawesome.github.io/Font-Awesome/) to give you a quick start. But you can use it without Bootstrap/Font Awesome and write the CSS yourself.\r\n\r\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/bilus/reforms/master/doc/images/sample.png\" width=\"70%\"></p>\r\n\r\nThe code is very concise. Here's what takes to generate the form above (including validation and automatic alignment) using Reagent:\r\n\r\n```clojure\r\n(def signup-validators [(present [:first] \"Enter first name\")\r\n                         (present [:last] \"Enter last name\")\r\n                         (present [:login] \"Enter login name\")\r\n                         (equal [:password1] [:password2] \"Passwords do not match\")\r\n                         (present [:password1] \"Choose password\")\r\n                         (present [:password2] \"Re-enter password\")])\r\n(defn sign-up!\r\n  [user ui-state]\r\n  (when (apply v/validate! user ui-state signup-validators)\r\n    (... actual sign up code ...)))\r\n\r\n(defn signup-view\r\n  [user ui-state]\r\n  (panel \"Sign up\"\r\n   (form ui-state {:on-submit #(sign-up! user ui-state)}\r\n    (text \"First name\" user [:first] :placeholder \"Enter first name\")\r\n    (text \"Last name\" user [:last] :placeholder \"Enter last name\")\r\n    (text \"Login\" user [:login] :placeholder \"Choose login\" )\r\n    (password \"Password\" user [:password1] :placeholder \"Enter password\")\r\n    (password \"Confirm password\" user [:password2] :placeholder \"Re-enter password\")\r\n    (form-buttons\r\n     (button-primary \"Sign up\" #(sign-up! user ui-state))))))\r\n```\r\n\r\n## Quick start ##\r\n\r\n### Dependencies\r\n\r\nAdd the correct library to `:dependencies` in project.clj: \r\n\r\n| Om                            | Reagent                            | Rum                           |\r\n|-------------------------------|------------------------------------|-------------------------------|\r\n| [![Clojars Project](http://clojars.org/om-reforms/latest-version.svg)](http://clojars.org/om-reforms) | [![Clojars Project](http://clojars.org/reagent-reforms/latest-version.svg)](http://clojars.org/reagent-reforms) | [![Clojars Project](http://clojars.org/rum-reforms/latest-version.svg)](http://clojars.org/rum-reforms) |\r\n\r\nThe library does not use Bootstrap JavaScript so just link to bootstrap css from your html page, e.g.:\r\n\r\n```html\r\n<link href=\"https://netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css\" rel=\"stylesheet\"/>\r\n```\r\n\r\nOptionally, to use Font Awesome icons to use features such as progress spinner, warning icons etc., link to it as well:\r\n\r\n```html\r\n<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\">\r\n```\r\n\r\n### Requires\r\n\r\n|              | Om                   | Reagent                | Rum\r\n|--------------| ---------------------|------------------------|----------\r\n| Core helpers | `reforms.om`         | `reforms.reagent`      | `reforms.rum`\r\n| Validation   | `reforms.validation` | `reforms.validation`   | `reforms.validation`\r\n\r\n<br>\r\n\r\n### A simple form\r\n\r\nCreating a form is a snap:\r\n\r\n```clojure\r\n(form\r\n  (text \"Your name\" \"Type your name here\" data [:name])\r\n  (form-buttons\r\n    (button {:class \"foo\"} \"Submit\" #(js/alert (:name @data)))))\r\n```\r\n\r\nIt returns pure hiccup-like data. Here's output from the function above (slightly simplified for clarity):\r\n\r\n```clojure\r\n[:form [:div {:class \"form-group\"\r\n              :key \"data-name\"}\r\n        [:label {:for \"data-name\"\r\n                 :class \"control-label \"} \"Your name\"]\r\n        [:input {:value \"My name\"\r\n                 :type \"text\"\r\n                 :class \"form-control\"\r\n                 :id \"data-name\"\r\n                 :placeholder \"Type your name here\"}]]\r\n [:div.form-group.form-buttons\r\n  [:button {:type \"button\"\r\n            :class \"btn btn-primary foo\"\r\n            :onClick #(js/alert (:name @data))} \"Submit\"]]]\r\n```\r\n\r\n### Rendering inside a component\r\n\r\n| Om                                | Reagent                   | Rum                       |\r\n| ----------------------------------| --------------------------| --------------------------|\r\n| `(sablono.core/html (form ....))` | `(form ...)`              | `(form ...)`              |\r\n\r\n<br>\r\n\r\nSee \"Examples\" below.\r\n\r\n## Documentation ##\r\n\r\n[Tutorial](https://github.com/bilus/reforms/blob/master/README.md) \r\n\r\n[API Reference](http://bilus.github.io/reforms/doc/)\r\n\r\n## Examples ##\r\n\r\n|              | Om   | Reagent   | Rum\r\n|--------------|------|-----------|----\r\n| Hello world  | [source](https://github.com/bilus/om-reforms/tree/master/examples/hello_world) - [demo](http://bilus.github.io/reforms/examples/om/hello_world/index.html) | [source](https://github.com/bilus/reagent-reforms/tree/master/examples/hello_world) - [demo](http://bilus.github.io/reforms/examples/reagent/hello_world/index.html) | [source](https://github.com/bilus/rum-reforms/tree/master/examples/hello_world) - [demo](http://bilus.github.io/reforms/examples/rum/hello_world/index.html)\r\n| Dynamic form | [source](https://github.com/bilus/om-reforms/tree/master/examples/simple) - [demo](http://bilus.github.io/reforms/examples/om/simple/index.html) | [source](https://github.com/bilus/reagent-reforms/tree/master/examples/simple) - [demo](http://bilus.github.io/reforms/examples/reagent/simple/index.html) | [source](https://github.com/bilus/rum-reforms/tree/master/examples/simple) - [demo](http://bilus.github.io/reforms/examples/rum/simple/index.html)\r\n| Controls     | [source](https://github.com/bilus/om-reforms/tree/master/examples/controls) - [demo](http://bilus.github.io/reforms/examples/om/controls/index.html) | [source](https://github.com/bilus/reagent-reforms/tree/master/examples/controls) - [demo](http://bilus.github.io/reforms/examples/reagent/controls/index.html) | [source](https://github.com/bilus/rum-reforms/tree/master/examples/controls) - [demo](http://bilus.github.io/reforms/examples/rum/controls/index.html)\r\n| Validation   | [source](https://github.com/bilus/om-reforms/tree/master/examples/validation) - [demo](http://bilus.github.io/reforms/examples/om/validation/index.html) | [source](https://github.com/bilus/reagent-reforms/tree/master/examples/validation) - [demo](http://bilus.github.io/reforms/examples/reagent/validation/index.html) | [source](https://github.com/bilus/rum-reforms/tree/master/examples/validation) - [demo](http://bilus.github.io/reforms/examples/rum/validation/index.html)\r\n| In-progress  | [source](https://github.com/bilus/om-reforms/tree/master/examples/progress) - [demo](http://bilus.github.io/reforms/om/examples/progress/index.html) | [source](https://github.com/bilus/reagent-reforms/tree/master/examples/progress) - [demo](http://bilus.github.io/reforms/examples/reagent/progress/index.html) | [source](https://github.com/bilus/rum-reforms/tree/master/examples/progress) - [demo](http://bilus.github.io/reforms/examples/rum/progress/index.html)\r\n\r\n<br>\r\n\r\n## Credits ##\r\n\r\n[Aspasia Beneti](https://github.com/aspasia) is the author and maintainer of the [Rum bindings](https://github.com/aspasia/rum-reforms) for Reforms.\r\n\r\n## Contact ##\r\n\r\nPlease feel free to tweet me @martinbilski or drop me an email: gyamtso at gmail dot com.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}