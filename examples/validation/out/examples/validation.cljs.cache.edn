;; Analyzed by ClojureScript 0.0-3308
{:use-macros {html sablono.core}, :excludes #{}, :name examples.validation, :imports nil, :requires {reforms.validation reforms.validation, v reforms.validation, sablono.core sablono.core, examples.shared.utils examples.shared.utils, om.core om.core, om om.core, str clojure.string, clojure.string clojure.string, reforms.core reforms.core, f reforms.core}, :uses {inspector-view examples.shared.utils}, :defs {customer-validators {:name examples.validation/customer-validators, :file "examples/validation/src/validation.cljs", :line 13, :column 1, :end-line 13, :end-column 25, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/validation/src/validation.cljs", :line 13, :column 6, :end-line 13, :end-column 25}}, t38555 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/t38555, :file "examples/validation/src/validation.cljs", :type true, :anonymous true, :column 3, :line 49, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, customer-list-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/validation/src/validation.cljs", :line 47, :column 7, :end-line 47, :end-column 25, :arglists (quote ([customers _owner]))}, :name examples.validation/customer-list-view, :variadic false, :file "examples/validation/src/validation.cljs", :end-column 25, :method-params ([customers _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([customers _owner]))}, t38578 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/t38578, :file "examples/validation/src/validation.cljs", :type true, :anonymous true, :column 3, :line 63, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, main-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/validation/src/validation.cljs", :line 61, :column 7, :end-line 61, :end-column 16, :arglists (quote ([app-state _owner]))}, :name examples.validation/main-view, :variadic false, :file "examples/validation/src/validation.cljs", :end-column 16, :method-params ([app-state _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app-state _owner]))}, sign-up! {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/validation/src/validation.cljs", :line 21, :column 7, :end-line 21, :end-column 15, :arglists (quote ([customers customer ui-state]))}, :name examples.validation/sign-up!, :variadic false, :file "examples/validation/src/validation.cljs", :end-column 15, :method-params ([customers customer ui-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 3, :fn-var true, :arglists (quote ([customers customer ui-state]))}, ->t38535 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([signup-form-view p__38528 _owner vec__38534 customers customer ui-state meta38536])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/->t38535, :variadic false, :file "examples/validation/src/validation.cljs", :method-params ([signup-form-view p__38528 _owner vec__38534 customers customer ui-state meta38536]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 28, :max-fixed-arity 8, :fn-var true, :arglists (quote ([signup-form-view p__38528 _owner vec__38534 customers customer ui-state meta38536])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t38530 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/t38530, :file "examples/validation/src/validation.cljs", :type true, :anonymous true, :column 3, :line 28, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t38578 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta38579])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/->t38578, :variadic false, :file "examples/validation/src/validation.cljs", :method-params ([main-view app-state _owner meta38579]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 63, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta38579])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t38555 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([customer-list-view customers _owner meta38556])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/->t38555, :variadic false, :file "examples/validation/src/validation.cljs", :method-params ([customer-list-view customers _owner meta38556]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 49, :max-fixed-arity 4, :fn-var true, :arglists (quote ([customer-list-view customers _owner meta38556])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t38539 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([customer-list-view customers _owner meta38540])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/->t38539, :variadic false, :file "examples/validation/src/validation.cljs", :method-params ([customer-list-view customers _owner meta38540]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 49, :max-fixed-arity 4, :fn-var true, :arglists (quote ([customer-list-view customers _owner meta38540])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t38535 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/t38535, :file "examples/validation/src/validation.cljs", :type true, :anonymous true, :column 3, :line 28, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t38530 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([signup-form-view p__38528 _owner vec__38529 customers customer ui-state meta38531])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/->t38530, :variadic false, :file "examples/validation/src/validation.cljs", :method-params ([signup-form-view p__38528 _owner vec__38529 customers customer ui-state meta38531]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 28, :max-fixed-arity 8, :fn-var true, :arglists (quote ([signup-form-view p__38528 _owner vec__38529 customers customer ui-state meta38531])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t38539 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/t38539, :file "examples/validation/src/validation.cljs", :type true, :anonymous true, :column 3, :line 49, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-state {:name examples.validation/app-state, :file "examples/validation/src/validation.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/validation/src/validation.cljs", :line 9, :column 6, :end-line 9, :end-column 15}}, t38572 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/t38572, :file "examples/validation/src/validation.cljs", :type true, :anonymous true, :column 3, :line 63, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t38572 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta38573])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/->t38572, :variadic false, :file "examples/validation/src/validation.cljs", :method-params ([main-view app-state _owner meta38573]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 63, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta38573])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, signup-form-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/validation/src/validation.cljs", :line 26, :column 7, :end-line 26, :end-column 23, :arglists (quote ([[customers customer ui-state] _owner]))}, :name examples.validation/signup-form-view, :variadic false, :file "examples/validation/src/validation.cljs", :end-column 23, :method-params ([p__38528 _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[customers customer ui-state] _owner]))}}, :require-macros {f reforms.core, reforms.core reforms.core, v reforms.validation, reforms.validation reforms.validation, om om.core, om.core om.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:password2 :label-column-class :input-column-class :password1 :customers :form-horizontal :login :customer :class :target :first :last :ui-state}, :order [:customers :customer :ui-state :first :last :login :password1 :password2 :form-horizontal :label-column-class :input-column-class :class :target]}, :doc nil}