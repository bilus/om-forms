;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name examples.simple, :imports nil, :requires {f reforms.rum, reforms.rum reforms.rum, rum rum.core, rum.core rum.core, examples.shared.utils examples.shared.utils}, :uses {inspector-view examples.shared.utils}, :defs {customer {:name examples.simple/customer, :file "examples/simple/src/simple.cljs", :line 6, :column 1, :end-line 6, :end-column 14, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/rum-reforms/examples/simple/src/simple.cljs", :line 6, :column 6, :end-line 6, :end-column 14}}, render-details {:name examples.simple/render-details, :file "examples/simple/src/simple.cljs", :line 8, :column 1, :end-line 8, :end-column 25, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/rum-reforms/examples/simple/src/simple.cljs", :line 8, :column 11, :end-line 8, :end-column 25}}, render-address {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/rum-reforms/examples/simple/src/simple.cljs", :line 30, :column 7, :end-line 30, :end-column 21, :arglists (quote ([customer]))}, :name examples.simple/render-address, :variadic false, :file "examples/simple/src/simple.cljs", :end-column 21, :method-params ([customer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([customer]))}, customer-form-view {:name examples.simple/customer-form-view, :file "examples/simple/src/simple.cljs", :line 42, :column 1, :end-line 42, :end-column 29, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/rum-reforms/examples/simple/src/simple.cljs", :line 42, :column 11, :end-line 42, :end-column 29}}, main-view {:name examples.simple/main-view, :file "examples/simple/src/simple.cljs", :line 58, :column 1, :end-line 58, :end-column 20, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/rum-reforms/examples/simple/src/simple.cljs", :line 58, :column 11, :end-line 58, :end-column 20}}}, :require-macros {f reforms.rum, reforms.rum reforms.rum, rum rum.core, rum.core rum.core}, :cljs.analyzer/constants {:seen #{:horizontal :group-title :color :placeholder :rum/class :private :password :reg-no :default :gb :company-name :corporate :city :background-color :us :type :pl :login :address1 :style :address2 :de :class :padding :attrs :form :tag :first :hierarchy :border :h3 :border-radius :last :country}, :order [:type :private :hierarchy :default :last :placeholder :first :corporate :country :us :gb :pl :de :reg-no :company-name :city :address2 :address1 :class :login :password :rum/class :form :group-title :horizontal :attrs :style :border :border-radius :background-color :padding :tag :h3 :color]}, :doc nil}