;; Analyzed by ClojureScript 1.7.122
{:name reforms.binding.rum, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses {IBinding reforms.binding.protocol}, :requires {reforms.binding.protocol reforms.binding.protocol}, :imports nil, :defs {do-reset! {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/rum-reforms/src/reforms/binding/rum.cljs", :line 10, :column 8, :end-line 10, :end-column 17, :private true, :arglists (quote ([x ks v]))}, :private true, :name reforms.binding.rum/do-reset!, :variadic false, :file "src/reforms/binding/rum.cljs", :end-column 17, :method-params ([x ks v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x ks v]))}, do-swap! {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/rum-reforms/src/reforms/binding/rum.cljs", :line 15, :column 8, :end-line 15, :end-column 16, :private true, :arglists (quote ([x ks f]))}, :private true, :name reforms.binding.rum/do-swap!, :variadic false, :file "src/reforms/binding/rum.cljs", :end-column 16, :method-params ([x ks f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x ks f]))}, IBinding {:impls (default)}}}