;; Analyzed by ClojureScript 0.0-3308
{:use-macros {html sablono.core}, :excludes #{}, :name examples.hello-world, :imports nil, :requires {f reforms.core, reforms.core reforms.core, om om.core, om.core om.core, sablono.core sablono.core}, :uses nil, :defs {main-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/hello_world/src/hello_world.cljs", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([app-state _owner]))}, :name examples.hello-world/main-view, :variadic false, :file "examples/hello_world/src/hello_world.cljs", :end-column 16, :method-params ([app-state _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app-state _owner]))}, ->t37055 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta37056])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.hello-world/->t37055, :variadic false, :file "examples/hello_world/src/hello_world.cljs", :method-params ([main-view app-state _owner meta37056]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 25, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta37056])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t37048 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.hello-world/t37048, :file "examples/hello_world/src/hello_world.cljs", :type true, :anonymous true, :column 3, :line 25, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t37044 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([simple-view data _owner meta37045])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.hello-world/->t37044, :variadic false, :file "examples/hello_world/src/hello_world.cljs", :method-params ([simple-view data _owner meta37045]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 10, :max-fixed-arity 4, :fn-var true, :arglists (quote ([simple-view data _owner meta37045])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t37055 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.hello-world/t37055, :file "examples/hello_world/src/hello_world.cljs", :type true, :anonymous true, :column 3, :line 25, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t37044 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.hello-world/t37044, :file "examples/hello_world/src/hello_world.cljs", :type true, :anonymous true, :column 3, :line 10, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t37048 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta37049])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.hello-world/->t37048, :variadic false, :file "examples/hello_world/src/hello_world.cljs", :method-params ([main-view app-state _owner meta37049]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 25, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta37049])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t37040 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.hello-world/t37040, :file "examples/hello_world/src/hello_world.cljs", :type true, :anonymous true, :column 3, :line 10, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t37040 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([simple-view data _owner meta37041])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.hello-world/->t37040, :variadic false, :file "examples/hello_world/src/hello_world.cljs", :method-params ([simple-view data _owner meta37041]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 10, :max-fixed-arity 4, :fn-var true, :arglists (quote ([simple-view data _owner meta37041])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, simple-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/hello_world/src/hello_world.cljs", :line 8, :column 7, :end-line 8, :end-column 18, :arglists (quote ([data _owner]))}, :name examples.hello-world/simple-view, :variadic false, :file "examples/hello_world/src/hello_world.cljs", :end-column 18, :method-params ([data _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data _owner]))}, app-state {:name examples.hello-world/app-state, :file "examples/hello_world/src/hello_world.cljs", :line 6, :column 1, :end-line 6, :end-column 15, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/hello_world/src/hello_world.cljs", :line 6, :column 6, :end-line 6, :end-column 15}}}, :require-macros {f reforms.core, reforms.core reforms.core, om om.core, om.core om.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:horizontal :name :on-submit :form :target :orientation-horizontal :data}, :order [:data :orientation-horizontal :form :horizontal :on-submit :name :target]}, :doc nil}