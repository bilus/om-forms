;; Analyzed by ClojureScript 0.0-3211
{:use-macros {html sablono.core}, :excludes #{}, :name examples.simple, :imports nil, :requires {sablono.core sablono.core, om om.core, om.core om.core, om-forms.core om-forms.core, f om-forms.core}, :uses nil, :defs {->t8577 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data view meta8578])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/->t8577, :variadic false, :file "examples/simple/src/simple.cljs", :method-params ([owner data view meta8578]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 7, :factory :positional, :line 11, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data view meta8578])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t8577 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/t8577, :file "examples/simple/src/simple.cljs", :type true, :anonymous true, :column 7, :line 11, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t8572 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data view meta8573])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/->t8572, :variadic false, :file "examples/simple/src/simple.cljs", :method-params ([owner data view meta8573]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 7, :factory :positional, :line 11, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data view meta8573])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t8572 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/t8572, :file "examples/simple/src/simple.cljs", :type true, :anonymous true, :column 7, :line 11, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, view {:protocol-inline nil, :meta {:arglists (quote ([data owner])), :end-column 11, :end-line 9, :column 7, :line 9, :file "/Users/martinb/dev/clojure_apps/proton/om-forms/examples/simple/src/simple.cljs"}, :name examples.simple/view, :variadic false, :file "examples/simple/src/simple.cljs", :end-column 11, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :test true}, app-state {:meta {:end-column 15, :end-line 7, :column 6, :line 7, :file "/Users/martinb/dev/clojure_apps/proton/om-forms/examples/simple/src/simple.cljs"}, :file "examples/simple/src/simple.cljs", :line 7, :column 1, :end-line 7, :end-column 15, :test true, :name examples.simple/app-state}}, :require-macros {sablono.core sablono.core, om om.core, om.core om.core, om-forms.core om-forms.core, f om-forms.core}, :cljs.analyzer/constants {:order [:target], :seen #{:target}}, :doc nil}