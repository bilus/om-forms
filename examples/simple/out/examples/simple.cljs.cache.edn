;; Analyzed by ClojureScript 0.0-3308
{:use-macros {html sablono.core}, :excludes #{}, :name examples.simple, :imports nil, :requires {f reforms.core, reforms.core reforms.core, om om.core, om.core om.core, sablono.core sablono.core, examples.shared.utils examples.shared.utils}, :uses {inspector-view examples.shared.utils}, :defs {render-address {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/simple/src/simple.cljs", :line 33, :column 7, :end-line 33, :end-column 21, :arglists (quote ([customer]))}, :name examples.simple/render-address, :variadic false, :file "examples/simple/src/simple.cljs", :end-column 21, :method-params ([customer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([customer]))}, ->t36533 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta36534])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/->t36533, :variadic false, :file "examples/simple/src/simple.cljs", :method-params ([main-view app-state _owner meta36534]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 68, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta36534])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t36520 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/t36520, :file "examples/simple/src/simple.cljs", :type true, :anonymous true, :column 3, :line 48, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, main-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/simple/src/simple.cljs", :line 66, :column 7, :end-line 66, :end-column 16, :arglists (quote ([app-state _owner]))}, :name examples.simple/main-view, :variadic false, :file "examples/simple/src/simple.cljs", :end-column 16, :method-params ([app-state _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app-state _owner]))}, customer-form-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/simple/src/simple.cljs", :line 46, :column 7, :end-line 46, :end-column 25, :arglists (quote ([customer _owner]))}, :name examples.simple/customer-form-view, :variadic false, :file "examples/simple/src/simple.cljs", :end-column 25, :method-params ([customer _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([customer _owner]))}, ->t36523 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([customer-form-view customer _owner meta36524])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/->t36523, :variadic false, :file "examples/simple/src/simple.cljs", :method-params ([customer-form-view customer _owner meta36524]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 48, :max-fixed-arity 4, :fn-var true, :arglists (quote ([customer-form-view customer _owner meta36524])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t36533 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/t36533, :file "examples/simple/src/simple.cljs", :type true, :anonymous true, :column 3, :line 68, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, render-details {:name examples.simple/render-details, :file "examples/simple/src/simple.cljs", :line 9, :column 1, :end-line 9, :end-column 25, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/simple/src/simple.cljs", :line 9, :column 11, :end-line 9, :end-column 25}}, t36523 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/t36523, :file "examples/simple/src/simple.cljs", :type true, :anonymous true, :column 3, :line 48, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t36526 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta36527])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/->t36526, :variadic false, :file "examples/simple/src/simple.cljs", :method-params ([main-view app-state _owner meta36527]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 68, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta36527])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-state {:name examples.simple/app-state, :file "examples/simple/src/simple.cljs", :line 7, :column 1, :end-line 7, :end-column 15, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/simple/src/simple.cljs", :line 7, :column 6, :end-line 7, :end-column 15}}, ->t36520 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([customer-form-view customer _owner meta36521])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/->t36520, :variadic false, :file "examples/simple/src/simple.cljs", :method-params ([customer-form-view customer _owner meta36521]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 48, :max-fixed-arity 4, :fn-var true, :arglists (quote ([customer-form-view customer _owner meta36521])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t36526 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/t36526, :file "examples/simple/src/simple.cljs", :type true, :anonymous true, :column 3, :line 68, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {f reforms.core, reforms.core reforms.core, om om.core, om.core om.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:horizontal :group-title :color :private :password :reg-no :default :gb :company-name :corporate :city :background-color :us :type :pl :login :customer :address1 :style :address2 :de :class :padding :attrs :form :tag :target :first :hierarchy :border :h3 :border-radius :last :country}, :order [:customer :type :private :hierarchy :default :last :first :corporate :country :us :gb :pl :de :reg-no :company-name :city :address2 :address1 :class :login :password :form :group-title :horizontal :attrs :style :border :border-radius :background-color :padding :tag :h3 :color :target]}, :doc nil}