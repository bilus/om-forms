;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name examples.shared.utils, :imports nil, :requires {pprint cljs.pprint, cljs.pprint cljs.pprint}, :uses nil, :defs {inspect {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/reagent-reforms/examples/shared/utils.cljs", :line 4, :column 7, :end-line 4, :end-column 14, :arglists (quote ([data]))}, :name examples.shared.utils/inspect, :variadic false, :file "examples/shared/utils.cljs", :end-column 14, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, inspector-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/reagent-reforms/examples/shared/utils.cljs", :line 8, :column 7, :end-line 8, :end-column 21, :arglists (quote ([data & [path]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(data [path])], :arglists ([data & [path]]), :arglists-meta (nil)}}, :name examples.shared.utils/inspector-view, :variadic true, :file "examples/shared/utils.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(data [path])], :arglists ([data & [path]]), :arglists-meta (nil)}, :method-params [(data [path])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists ([data & [path]])}}, :require-macros {pprint cljs.pprint, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:key :pre.inspector}, :order [:pre.inspector :key]}, :doc nil}