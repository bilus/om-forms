;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name examples.hello-world, :imports nil, :requires {f reforms.reagent, reforms.reagent reforms.reagent, reagent.core reagent.core, examples.shared.utils examples.shared.utils}, :uses {atom reagent.core, inspector-view examples.shared.utils, render-component reagent.core}, :defs {simple-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/reagent-reforms/examples/hello_world/src/hello_world.cljs", :line 6, :column 7, :end-line 6, :end-column 18, :arglists (quote ([data]))}, :name examples.hello-world/simple-view, :variadic false, :file "examples/hello_world/src/hello_world.cljs", :end-column 18, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, app-state {:name examples.hello-world/app-state, :file "examples/hello_world/src/hello_world.cljs", :line 22, :column 1, :end-line 22, :end-column 15, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/reagent-reforms/examples/hello_world/src/hello_world.cljs", :line 22, :column 6, :end-line 22, :end-column 15}}, main-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/reagent-reforms/examples/hello_world/src/hello_world.cljs", :line 24, :column 7, :end-line 24, :end-column 16, :arglists (quote ([]))}, :name examples.hello-world/main-view, :variadic false, :file "examples/hello_world/src/hello_world.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {f reforms.reagent, reforms.reagent reforms.reagent}, :cljs.analyzer/constants {:seen #{:horizontal :name :div :on-submit :form}, :order [:form :horizontal :on-submit :name :div]}, :doc nil}