;; Analyzed by ClojureScript 1.7.122
{:use-macros {html sablono.core}, :excludes #{}, :name examples.local-state, :imports nil, :requires {f reforms.om, reforms.om reforms.om, reforms.binding.om-state reforms.binding.om-state, v reforms.validation, reforms.validation reforms.validation, om om.core, om.core om.core, sablono.core sablono.core}, :uses nil, :defs {->t_examples$local_state159324 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta159325])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.local-state/->t_examples$local_state159324, :variadic false, :file "examples/local_state/src/local_state.cljs", :method-params ([main-view app-state _owner meta159325]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 35, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta159325])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, main-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/local_state/src/local_state.cljs", :line 33, :column 7, :end-line 33, :end-column 16, :arglists (quote ([app-state _owner]))}, :name examples.local-state/main-view, :variadic false, :file "examples/local_state/src/local_state.cljs", :end-column 16, :method-params ([app-state _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app-state _owner]))}, t_examples$local_state159313 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name examples.local-state/t_examples$local_state159313, :file "examples/local_state/src/local_state.cljs", :type true, :anonymous true, :column 3, :line 14, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$local_state159313 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([local-state-demo-view _data owner meta159314])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name examples.local-state/->t_examples$local_state159313, :variadic false, :file "examples/local_state/src/local_state.cljs", :method-params ([local-state-demo-view _data owner meta159314]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 14, :max-fixed-arity 4, :fn-var true, :arglists (quote ([local-state-demo-view _data owner meta159314])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, local-state-demo-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/local_state/src/local_state.cljs", :line 12, :column 7, :end-line 12, :end-column 28, :arglists (quote ([_data owner]))}, :name examples.local-state/local-state-demo-view, :variadic false, :file "examples/local_state/src/local_state.cljs", :end-column 28, :method-params ([_data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_data owner]))}, ->t_examples$local_state159317 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta159318])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.local-state/->t_examples$local_state159317, :variadic false, :file "examples/local_state/src/local_state.cljs", :method-params ([main-view app-state _owner meta159318]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 35, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta159318])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$local_state159309 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([local-state-demo-view _data owner meta159310])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name examples.local-state/->t_examples$local_state159309, :variadic false, :file "examples/local_state/src/local_state.cljs", :method-params ([local-state-demo-view _data owner meta159310]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 14, :max-fixed-arity 4, :fn-var true, :arglists (quote ([local-state-demo-view _data owner meta159310])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_examples$local_state159324 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.local-state/t_examples$local_state159324, :file "examples/local_state/src/local_state.cljs", :type true, :anonymous true, :column 3, :line 35, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_examples$local_state159309 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name examples.local-state/t_examples$local_state159309, :file "examples/local_state/src/local_state.cljs", :type true, :anonymous true, :column 3, :line 14, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-state {:name examples.local-state/app-state, :file "examples/local_state/src/local_state.cljs", :line 10, :column 1, :end-line 10, :end-column 15, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/local_state/src/local_state.cljs", :line 10, :column 6, :end-line 10, :end-column 15}}, t_examples$local_state159317 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.local-state/t_examples$local_state159317, :file "examples/local_state/src/local_state.cljs", :type true, :anonymous true, :column 3, :line 35, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {f reforms.om, reforms.om reforms.om, v reforms.validation, reforms.validation reforms.validation, om om.core, om.core om.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{_owner :horizontal main-view meta159314 owner :pre :placeholder reforms.binding.core/valid? meta159318 meta159325 _data :name meta159310 local-state-demo-view :on-submit app-state :form :target quote :orientation-horizontal :arglists :data}, :order [:form :horizontal :orientation-horizontal reforms.binding.core/valid? owner :on-submit :name :placeholder :pre local-state-demo-view :arglists quote _data meta159310 meta159314 :data main-view app-state _owner meta159318 meta159325 :target]}, :doc nil}