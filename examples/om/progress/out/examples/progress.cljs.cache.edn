;; Analyzed by ClojureScript 1.7.122
{:use-macros {html sablono.core, go cljs.core.async.macros}, :excludes #{}, :name examples.progress, :imports nil, :requires {reforms.validation reforms.validation, reforms.om reforms.om, v reforms.validation, cljs.core.async cljs.core.async, sablono.core sablono.core, examples.shared.utils examples.shared.utils, om.core om.core, om om.core, utils examples.shared.utils, f reforms.om}, :uses {timeout cljs.core.async, <! cljs.core.async}, :defs {t_examples$progress158679 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.progress/t_examples$progress158679, :file "examples/progress/src/progress.cljs", :type true, :anonymous true, :column 3, :line 48, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$progress158676 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([simple-view data _owner meta158677])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.progress/->t_examples$progress158676, :variadic false, :file "examples/progress/src/progress.cljs", :method-params ([simple-view data _owner meta158677]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 32, :max-fixed-arity 4, :fn-var true, :arglists (quote ([simple-view data _owner meta158677])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_examples$progress158676 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.progress/t_examples$progress158676, :file "examples/progress/src/progress.cljs", :type true, :anonymous true, :column 3, :line 32, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, main-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/progress/src/progress.cljs", :line 46, :column 7, :end-line 46, :end-column 16, :arglists (quote ([app-state _owner]))}, :name examples.progress/main-view, :variadic false, :file "examples/progress/src/progress.cljs", :end-column 16, :method-params ([app-state _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app-state _owner]))}, start-succeed! {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/progress/src/progress.cljs", :line 22, :column 7, :end-line 22, :end-column 21, :arglists (quote ([operation data]))}, :name examples.progress/start-succeed!, :variadic false, :file "examples/progress/src/progress.cljs", :end-column 21, :method-params ([operation data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([operation data]))}, start-fail! {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/progress/src/progress.cljs", :line 26, :column 7, :end-line 26, :end-column 18, :arglists (quote ([operation data]))}, :name examples.progress/start-fail!, :variadic false, :file "examples/progress/src/progress.cljs", :end-column 18, :method-params ([operation data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([operation data]))}, ->t_examples$progress158679 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta158680])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.progress/->t_examples$progress158679, :variadic false, :file "examples/progress/src/progress.cljs", :method-params ([main-view app-state _owner meta158680]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 48, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta158680])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$progress158673 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([simple-view data _owner meta158674])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.progress/->t_examples$progress158673, :variadic false, :file "examples/progress/src/progress.cljs", :method-params ([simple-view data _owner meta158674]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 32, :max-fixed-arity 4, :fn-var true, :arglists (quote ([simple-view data _owner meta158674])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, simple-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/progress/src/progress.cljs", :line 30, :column 7, :end-line 30, :end-column 18, :arglists (quote ([data _owner]))}, :name examples.progress/simple-view, :variadic false, :file "examples/progress/src/progress.cljs", :end-column 18, :method-params ([data _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data _owner]))}, t_examples$progress158673 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.progress/t_examples$progress158673, :file "examples/progress/src/progress.cljs", :type true, :anonymous true, :column 3, :line 32, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_examples$progress158686 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.progress/t_examples$progress158686, :file "examples/progress/src/progress.cljs", :type true, :anonymous true, :column 3, :line 48, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-state {:name examples.progress/app-state, :file "examples/progress/src/progress.cljs", :line 10, :column 1, :end-line 10, :end-column 15, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/progress/src/progress.cljs", :line 10, :column 6, :end-line 10, :end-column 15}}, simulate-long-operation! {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/progress/src/progress.cljs", :line 12, :column 7, :end-line 12, :end-column 31, :arglists (quote ([operation data success]))}, :name examples.progress/simulate-long-operation!, :variadic false, :file "examples/progress/src/progress.cljs", :end-column 31, :method-params ([operation data success]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 3, :fn-var true, :arglists (quote ([operation data success]))}, ->t_examples$progress158686 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta158687])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.progress/->t_examples$progress158686, :variadic false, :file "examples/progress/src/progress.cljs", :method-params ([main-view app-state _owner meta158687]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 48, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta158687])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, f reforms.om, reforms.om reforms.om, om om.core, om.core om.core, sablono.core sablono.core, v reforms.validation, reforms.validation reforms.validation}, :cljs.analyzer/constants {:seen #{meta158674 _owner main-view meta158677 :placeholder meta158680 :disabled :in-progress data :else reforms.binding.core/valid? :name :op1 :recur simple-view :operation-failed :op2 meta158687 app-state :target quote :arglists :progress :data}, :order [:data :progress :recur :operation-failed :else reforms.binding.core/valid? data :name :placeholder :op1 :in-progress :disabled :op2 simple-view :arglists quote _owner meta158674 meta158677 main-view app-state meta158680 meta158687 :target]}, :doc nil}