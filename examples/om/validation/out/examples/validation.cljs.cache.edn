;; Analyzed by ClojureScript 1.7.122
{:use-macros {html sablono.core}, :excludes #{}, :name examples.validation, :imports nil, :requires {reforms.validation reforms.validation, reforms.om reforms.om, v reforms.validation, sablono.core sablono.core, examples.shared.utils examples.shared.utils, om.core om.core, om om.core, str clojure.string, clojure.string clojure.string, f reforms.om}, :uses {inspector-view examples.shared.utils}, :defs {customer-validators {:name examples.validation/customer-validators, :file "examples/validation/src/validation.cljs", :line 26, :column 1, :end-line 26, :end-column 25, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/validation/src/validation.cljs", :line 26, :column 6, :end-line 26, :end-column 25}}, customer-list-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/validation/src/validation.cljs", :line 74, :column 7, :end-line 74, :end-column 25, :arglists (quote ([customers _owner]))}, :name examples.validation/customer-list-view, :variadic false, :file "examples/validation/src/validation.cljs", :end-column 25, :method-params ([customers _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 2, :fn-var true, :arglists (quote ([customers _owner]))}, main-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/validation/src/validation.cljs", :line 88, :column 7, :end-line 88, :end-column 16, :arglists (quote ([app-state _owner]))}, :name examples.validation/main-view, :variadic false, :file "examples/validation/src/validation.cljs", :end-column 16, :method-params ([app-state _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app-state _owner]))}, sign-up! {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/validation/src/validation.cljs", :line 35, :column 7, :end-line 35, :end-column 15, :arglists (quote ([customers customer ui-state]))}, :name examples.validation/sign-up!, :variadic false, :file "examples/validation/src/validation.cljs", :end-column 15, :method-params ([customers customer ui-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 3, :fn-var true, :arglists (quote ([customers customer ui-state]))}, force-error! {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/validation/src/validation.cljs", :line 40, :column 7, :end-line 40, :end-column 19, :arglists (quote ([customer ui-state]))}, :name examples.validation/force-error!, :variadic false, :file "examples/validation/src/validation.cljs", :end-column 19, :method-params ([customer ui-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([customer ui-state]))}, positive-number {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/validation/src/validation.cljs", :line 20, :column 7, :end-line 20, :end-column 22, :arglists (quote ([korks error-message]))}, :name examples.validation/positive-number, :variadic false, :file "examples/validation/src/validation.cljs", :end-column 22, :method-params ([korks error-message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([korks error-message]))}, ->t_examples$validation165895 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([signup-form-view p__165893 _owner vec__165894 customers customer ui-state meta165896])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/->t_examples$validation165895, :variadic false, :file "examples/validation/src/validation.cljs", :method-params ([signup-form-view p__165893 _owner vec__165894 customers customer ui-state meta165896]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 49, :max-fixed-arity 8, :fn-var true, :arglists (quote ([signup-form-view p__165893 _owner vec__165894 customers customer ui-state meta165896])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$validation165951 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta165952])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/->t_examples$validation165951, :variadic false, :file "examples/validation/src/validation.cljs", :method-params ([main-view app-state _owner meta165952]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 90, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta165952])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$validation165924 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([customer-list-view customers _owner meta165925])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/->t_examples$validation165924, :variadic false, :file "examples/validation/src/validation.cljs", :method-params ([customer-list-view customers _owner meta165925]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 76, :max-fixed-arity 4, :fn-var true, :arglists (quote ([customer-list-view customers _owner meta165925])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_examples$validation165900 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/t_examples$validation165900, :file "examples/validation/src/validation.cljs", :type true, :anonymous true, :column 3, :line 49, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_examples$validation165904 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/t_examples$validation165904, :file "examples/validation/src/validation.cljs", :type true, :anonymous true, :column 3, :line 76, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$validation165900 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([signup-form-view p__165893 _owner vec__165899 customers customer ui-state meta165901])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/->t_examples$validation165900, :variadic false, :file "examples/validation/src/validation.cljs", :method-params ([signup-form-view p__165893 _owner vec__165899 customers customer ui-state meta165901]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 49, :max-fixed-arity 8, :fn-var true, :arglists (quote ([signup-form-view p__165893 _owner vec__165899 customers customer ui-state meta165901])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, positive-number? {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/validation/src/validation.cljs", :line 16, :column 7, :end-line 16, :end-column 23, :arglists (quote ([s]))}, :name examples.validation/positive-number?, :variadic false, :file "examples/validation/src/validation.cljs", :end-column 23, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, t_examples$validation165895 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/t_examples$validation165895, :file "examples/validation/src/validation.cljs", :type true, :anonymous true, :column 3, :line 49, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-state {:name examples.validation/app-state, :file "examples/validation/src/validation.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/validation/src/validation.cljs", :line 9, :column 6, :end-line 9, :end-column 15}}, ->t_examples$validation165945 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta165946])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/->t_examples$validation165945, :variadic false, :file "examples/validation/src/validation.cljs", :method-params ([main-view app-state _owner meta165946]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 90, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta165946])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_examples$validation165945 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/t_examples$validation165945, :file "examples/validation/src/validation.cljs", :type true, :anonymous true, :column 3, :line 90, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_examples$validation165924 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/t_examples$validation165924, :file "examples/validation/src/validation.cljs", :type true, :anonymous true, :column 3, :line 76, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$validation165904 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([customer-list-view customers _owner meta165905])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/->t_examples$validation165904, :variadic false, :file "examples/validation/src/validation.cljs", :method-params ([customer-list-view customers _owner meta165905]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 76, :max-fixed-arity 4, :fn-var true, :arglists (quote ([customer-list-view customers _owner meta165905])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, signup-form-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/validation/src/validation.cljs", :line 47, :column 7, :end-line 47, :end-column 23, :arglists (quote ([[customers customer ui-state] _owner]))}, :name examples.validation/signup-form-view, :variadic false, :file "examples/validation/src/validation.cljs", :end-column 23, :method-params ([p__165893 _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[customers customer ui-state] _owner]))}, t_examples$validation165951 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.validation/t_examples$validation165951, :file "examples/validation/src/validation.cljs", :type true, :anonymous true, :column 3, :line 90, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {f reforms.om, reforms.om reforms.om, v reforms.validation, reforms.validation reforms.validation, om om.core, om.core om.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{customer-list-view vec__165899 :password2 meta165896 :warn-fn _owner :label-column-class main-view :age p__165893 :placeholder ui-state reforms.binding.core/valid? :server-error :input-column-class :city :password1 :customers :form-horizontal :login :customer customers meta165925 :class customer meta165952 meta165946 :on-submit app-state vec__165894 :target :first quote :arglists meta165905 :last meta165901 signup-form-view :ui-state}, :order [:customers :customer :ui-state :city :first :last :age :login :password1 :password2 :server-error :form-horizontal :label-column-class :input-column-class reforms.binding.core/valid? ui-state :on-submit :placeholder :warn-fn signup-form-view :arglists quote customers customer _owner p__165893 vec__165894 meta165896 vec__165899 meta165901 customer-list-view meta165905 meta165925 :class main-view app-state meta165946 meta165952 :target]}, :doc nil}