;; Analyzed by ClojureScript 1.7.122
{:use-macros {html sablono.core}, :excludes #{}, :name examples.controls, :imports nil, :requires {t reforms.table, reforms.validation reforms.validation, reforms.table reforms.table, reforms.om reforms.om, v reforms.validation, sablono.core sablono.core, examples.shared.utils examples.shared.utils, om.core om.core, om om.core, f reforms.om}, :uses {inspector-view examples.shared.utils}, :defs {->t_examples$controls156648 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta156649])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.controls/->t_examples$controls156648, :variadic false, :file "examples/controls/src/controls.cljs", :method-params ([main-view app-state _owner meta156649]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 98, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta156649])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$controls156640 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta156641])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.controls/->t_examples$controls156640, :variadic false, :file "examples/controls/src/controls.cljs", :method-params ([main-view app-state _owner meta156641]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 98, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta156641])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_examples$controls156616 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.controls/t_examples$controls156616, :file "examples/controls/src/controls.cljs", :type true, :anonymous true, :column 3, :line 19, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, main-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/controls/src/controls.cljs", :line 96, :column 7, :end-line 96, :end-column 16, :arglists (quote ([app-state _owner]))}, :name examples.controls/main-view, :variadic false, :file "examples/controls/src/controls.cljs", :end-column 16, :method-params ([app-state _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app-state _owner]))}, t_examples$controls156592 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.controls/t_examples$controls156592, :file "examples/controls/src/controls.cljs", :type true, :anonymous true, :column 3, :line 19, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, simple-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/controls/src/controls.cljs", :line 16, :column 7, :end-line 16, :end-column 18, :arglists (quote ([data _owner]))}, :name examples.controls/simple-view, :variadic false, :file "examples/controls/src/controls.cljs", :end-column 18, :method-params ([data _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data _owner]))}, ->t_examples$controls156616 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([simple-view data _owner meta156617])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.controls/->t_examples$controls156616, :variadic false, :file "examples/controls/src/controls.cljs", :method-params ([simple-view data _owner meta156617]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 19, :max-fixed-arity 4, :fn-var true, :arglists (quote ([simple-view data _owner meta156617])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$controls156592 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([simple-view data _owner meta156593])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.controls/->t_examples$controls156592, :variadic false, :file "examples/controls/src/controls.cljs", :method-params ([simple-view data _owner meta156593]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 19, :max-fixed-arity 4, :fn-var true, :arglists (quote ([simple-view data _owner meta156593])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-state {:name examples.controls/app-state, :file "examples/controls/src/controls.cljs", :line 11, :column 1, :end-line 11, :end-column 15, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/controls/src/controls.cljs", :line 11, :column 6, :end-line 11, :end-column 15}}, t_examples$controls156648 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.controls/t_examples$controls156648, :file "examples/controls/src/controls.cljs", :type true, :anonymous true, :column 3, :line 98, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_examples$controls156640 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.controls/t_examples$controls156640, :file "examples/controls/src/controls.cljs", :type true, :anonymous true, :column 3, :line 98, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {f reforms.om, reforms.om reforms.om, om om.core, om.core om.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:path :datetime-local :email :date :week _owner :horizontal main-view :selected :color :key :placeholder data :radio :number :password :checkbox :columns :name :time meta156649 :username :month :search meta156593 :login :tel :textarea :rows :div :row-id simple-view :id :class :option3 meta156617 :url :on-submit :option4 :option1 :option2 app-state :form :target quote :arglists :selection :remember meta156641 :checkboxes :select :text :data}, :order [:data :color :selected :login :div :form :horizontal :on-submit :username :placeholder :password :remember :name :id :columns :key :class :checkboxes :selection :path :row-id :text :rows :textarea :select :option1 :option2 :option3 :option4 :checkbox :radio :datetime-local :date :month :time :week :number :email :url :search :tel simple-view :arglists quote data _owner meta156593 meta156617 main-view app-state meta156641 meta156649 :target]}, :doc nil}