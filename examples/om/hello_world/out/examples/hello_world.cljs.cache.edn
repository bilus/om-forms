;; Analyzed by ClojureScript 1.7.122
{:use-macros {html sablono.core}, :excludes #{}, :name examples.hello-world, :imports nil, :requires {f reforms.om, reforms.om reforms.om, om om.core, om.core om.core, sablono.core sablono.core}, :uses nil, :defs {t_examples$hello_world165269 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.hello-world/t_examples$hello_world165269, :file "examples/hello_world/src/hello_world.cljs", :type true, :anonymous true, :column 3, :line 33, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, main-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/hello_world/src/hello_world.cljs", :line 31, :column 7, :end-line 31, :end-column 16, :arglists (quote ([app-state _owner]))}, :name examples.hello-world/main-view, :variadic false, :file "examples/hello_world/src/hello_world.cljs", :end-column 16, :method-params ([app-state _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app-state _owner]))}, t_examples$hello_world165254 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.hello-world/t_examples$hello_world165254, :file "examples/hello_world/src/hello_world.cljs", :type true, :anonymous true, :column 3, :line 18, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_examples$hello_world165258 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.hello-world/t_examples$hello_world165258, :file "examples/hello_world/src/hello_world.cljs", :type true, :anonymous true, :column 3, :line 18, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$hello_world165258 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([simple-view data _owner meta165259])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.hello-world/->t_examples$hello_world165258, :variadic false, :file "examples/hello_world/src/hello_world.cljs", :method-params ([simple-view data _owner meta165259]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 18, :max-fixed-arity 4, :fn-var true, :arglists (quote ([simple-view data _owner meta165259])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$hello_world165254 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([simple-view data _owner meta165255])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.hello-world/->t_examples$hello_world165254, :variadic false, :file "examples/hello_world/src/hello_world.cljs", :method-params ([simple-view data _owner meta165255]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 18, :max-fixed-arity 4, :fn-var true, :arglists (quote ([simple-view data _owner meta165255])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$hello_world165262 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta165263])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.hello-world/->t_examples$hello_world165262, :variadic false, :file "examples/hello_world/src/hello_world.cljs", :method-params ([main-view app-state _owner meta165263]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 33, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta165263])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, simple-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/hello_world/src/hello_world.cljs", :line 16, :column 7, :end-line 16, :end-column 18, :arglists (quote ([data _owner]))}, :name examples.hello-world/simple-view, :variadic false, :file "examples/hello_world/src/hello_world.cljs", :end-column 18, :method-params ([data _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data _owner]))}, t_examples$hello_world165262 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.hello-world/t_examples$hello_world165262, :file "examples/hello_world/src/hello_world.cljs", :type true, :anonymous true, :column 3, :line 33, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$hello_world165269 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta165270])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.hello-world/->t_examples$hello_world165269, :variadic false, :file "examples/hello_world/src/hello_world.cljs", :method-params ([main-view app-state _owner meta165270]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 33, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta165270])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-state {:name examples.hello-world/app-state, :file "examples/hello_world/src/hello_world.cljs", :line 14, :column 1, :end-line 14, :end-column 15, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/hello_world/src/hello_world.cljs", :line 14, :column 6, :end-line 14, :end-column 15}}}, :require-macros {f reforms.om, reforms.om reforms.om, om om.core, om.core om.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{_owner meta165255 :horizontal main-view meta165263 :placeholder data :name meta165270 simple-view :on-submit app-state :form :target quote :orientation-horizontal :arglists meta165259 :data}, :order [:data :orientation-horizontal :form :horizontal :on-submit :name :placeholder simple-view :arglists quote data _owner meta165255 meta165259 main-view app-state meta165263 meta165270 :target]}, :doc nil}