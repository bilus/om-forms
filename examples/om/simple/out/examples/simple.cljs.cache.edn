;; Analyzed by ClojureScript 1.7.122
{:use-macros {html sablono.core}, :excludes #{}, :name examples.simple, :imports nil, :requires {f reforms.om, reforms.om reforms.om, om om.core, om.core om.core, sablono.core sablono.core, examples.shared.utils examples.shared.utils}, :uses {inspector-view examples.shared.utils}, :defs {render-address {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/simple/src/simple.cljs", :line 29, :column 7, :end-line 29, :end-column 21, :arglists (quote ([customer]))}, :name examples.simple/render-address, :variadic false, :file "examples/simple/src/simple.cljs", :end-column 21, :method-params ([customer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([customer]))}, main-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/simple/src/simple.cljs", :line 57, :column 7, :end-line 57, :end-column 16, :arglists (quote ([app-state _owner]))}, :name examples.simple/main-view, :variadic false, :file "examples/simple/src/simple.cljs", :end-column 16, :method-params ([app-state _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app-state _owner]))}, customer-form-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/simple/src/simple.cljs", :line 37, :column 7, :end-line 37, :end-column 25, :arglists (quote ([customer _owner]))}, :name examples.simple/customer-form-view, :variadic false, :file "examples/simple/src/simple.cljs", :end-column 25, :method-params ([customer _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([customer _owner]))}, ->t_examples$simple171923 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([customer-form-view customer _owner meta171924])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/->t_examples$simple171923, :variadic false, :file "examples/simple/src/simple.cljs", :method-params ([customer-form-view customer _owner meta171924]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 39, :max-fixed-arity 4, :fn-var true, :arglists (quote ([customer-form-view customer _owner meta171924])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_examples$simple171933 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/t_examples$simple171933, :file "examples/simple/src/simple.cljs", :type true, :anonymous true, :column 3, :line 59, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_examples$simple171923 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/t_examples$simple171923, :file "examples/simple/src/simple.cljs", :type true, :anonymous true, :column 3, :line 39, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$simple171920 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([customer-form-view customer _owner meta171921])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/->t_examples$simple171920, :variadic false, :file "examples/simple/src/simple.cljs", :method-params ([customer-form-view customer _owner meta171921]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 39, :max-fixed-arity 4, :fn-var true, :arglists (quote ([customer-form-view customer _owner meta171921])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$simple171933 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta171934])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/->t_examples$simple171933, :variadic false, :file "examples/simple/src/simple.cljs", :method-params ([main-view app-state _owner meta171934]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 59, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta171934])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_examples$simple171926 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/t_examples$simple171926, :file "examples/simple/src/simple.cljs", :type true, :anonymous true, :column 3, :line 59, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_examples$simple171920 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/t_examples$simple171920, :file "examples/simple/src/simple.cljs", :type true, :anonymous true, :column 3, :line 39, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_examples$simple171926 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta171927])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.simple/->t_examples$simple171926, :variadic false, :file "examples/simple/src/simple.cljs", :method-params ([main-view app-state _owner meta171927]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 59, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta171927])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, render-details {:name examples.simple/render-details, :file "examples/simple/src/simple.cljs", :line 9, :column 1, :end-line 9, :end-column 25, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/simple/src/simple.cljs", :line 9, :column 11, :end-line 9, :end-column 25}}, app-state {:name examples.simple/app-state, :file "examples/simple/src/simple.cljs", :line 7, :column 1, :end-line 7, :end-column 15, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/om-reforms/examples/simple/src/simple.cljs", :line 7, :column 6, :end-line 7, :end-column 15}}}, :require-macros {f reforms.om, reforms.om reforms.om, om om.core, om.core om.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{_owner :horizontal main-view :group-title :color customer-form-view :placeholder :private :password :reg-no :default :gb meta171934 :company-name :corporate :city :background-color :us meta171927 :type :pl :login :customer :address1 :style :address2 :de :class :padding customer :attrs meta171921 app-state :form meta171924 :tag :target :first quote :arglists :hierarchy :border :h3 :border-radius :last :country}, :order [:customer :type :private :hierarchy :default :last :placeholder :first :corporate :country :us :gb :pl :de :reg-no :company-name :city :address2 :address1 :class :login :password customer-form-view :arglists quote customer _owner meta171921 meta171924 main-view app-state meta171927 meta171934 :form :group-title :horizontal :attrs :style :border :border-radius :background-color :padding :tag :h3 :color :target]}, :doc nil}