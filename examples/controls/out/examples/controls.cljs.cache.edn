;; Analyzed by ClojureScript 0.0-3308
{:use-macros {html sablono.core}, :excludes #{}, :name examples.controls, :imports nil, :requires {f reforms.core, reforms.core reforms.core, om om.core, om.core om.core, sablono.core sablono.core, examples.shared.utils examples.shared.utils}, :uses {inspector-view examples.shared.utils}, :defs {main-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/controls/src/controls.cljs", :line 46, :column 7, :end-line 46, :end-column 16, :arglists (quote ([app-state _owner]))}, :name examples.controls/main-view, :variadic false, :file "examples/controls/src/controls.cljs", :end-column 16, :method-params ([app-state _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app-state _owner]))}, t36790 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.controls/t36790, :file "examples/controls/src/controls.cljs", :type true, :anonymous true, :column 3, :line 48, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t36790 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta36791])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.controls/->t36790, :variadic false, :file "examples/controls/src/controls.cljs", :method-params ([main-view app-state _owner meta36791]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 48, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta36791])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t36794 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.controls/t36794, :file "examples/controls/src/controls.cljs", :type true, :anonymous true, :column 3, :line 48, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t36786 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([simple-view data _owner meta36787])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.controls/->t36786, :variadic false, :file "examples/controls/src/controls.cljs", :method-params ([simple-view data _owner meta36787]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 11, :max-fixed-arity 4, :fn-var true, :arglists (quote ([simple-view data _owner meta36787])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, simple-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/controls/src/controls.cljs", :line 9, :column 7, :end-line 9, :end-column 18, :arglists (quote ([data _owner]))}, :name examples.controls/simple-view, :variadic false, :file "examples/controls/src/controls.cljs", :end-column 18, :method-params ([data _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data _owner]))}, t36786 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.controls/t36786, :file "examples/controls/src/controls.cljs", :type true, :anonymous true, :column 3, :line 11, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t36794 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta36795])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.controls/->t36794, :variadic false, :file "examples/controls/src/controls.cljs", :method-params ([main-view app-state _owner meta36795]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 48, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta36795])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t36782 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([simple-view data _owner meta36783])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.controls/->t36782, :variadic false, :file "examples/controls/src/controls.cljs", :method-params ([simple-view data _owner meta36783]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 11, :max-fixed-arity 4, :fn-var true, :arglists (quote ([simple-view data _owner meta36783])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-state {:name examples.controls/app-state, :file "examples/controls/src/controls.cljs", :line 7, :column 1, :end-line 7, :end-column 15, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/controls/src/controls.cljs", :line 7, :column 6, :end-line 7, :end-column 15}}, t36782 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.controls/t36782, :file "examples/controls/src/controls.cljs", :type true, :anonymous true, :column 3, :line 11, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {f reforms.core, reforms.core reforms.core, om om.core, om.core om.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:datetime-local :email :date :week :horizontal :color :radio :number :password :checkbox :time :month :search :tel :textarea :rows :div :option3 :url :on-submit :option4 :option1 :option2 :form :target :h1 :select :text :data}, :order [:data :color :form :horizontal :div :h1 :on-submit :text :password :rows :textarea :select :option1 :option2 :option3 :option4 :checkbox :radio :datetime-local :date :month :time :week :number :email :url :search :tel :target]}, :doc nil}