;; Analyzed by ClojureScript 0.0-3308
{:use-macros {html sablono.core}, :excludes #{}, :name examples.shared.utils, :imports nil, :requires {pprint cljs.pprint, cljs.pprint cljs.pprint, om om.core, om.core om.core, sablono.core sablono.core}, :uses nil, :defs {inspect {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/shared/utils.cljs", :line 6, :column 7, :end-line 6, :end-column 14, :arglists (quote ([data]))}, :name examples.shared.utils/inspect, :variadic false, :file "examples/shared/utils.cljs", :end-column 14, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, inspector-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/shared/utils.cljs", :line 10, :column 7, :end-line 10, :end-column 21, :arglists (quote ([data _owner]))}, :name examples.shared.utils/inspector-view, :variadic false, :file "examples/shared/utils.cljs", :end-column 21, :method-params ([data _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data _owner]))}, t42895 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.shared.utils/t42895, :file "examples/shared/utils.cljs", :type true, :anonymous true, :column 3, :line 12, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t42895 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([inspector-view data _owner meta42896])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.shared.utils/->t42895, :variadic false, :file "examples/shared/utils.cljs", :method-params ([inspector-view data _owner meta42896]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 12, :max-fixed-arity 4, :fn-var true, :arglists (quote ([inspector-view data _owner meta42896])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t42899 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.shared.utils/t42899, :file "examples/shared/utils.cljs", :type true, :anonymous true, :column 3, :line 12, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t42899 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([inspector-view data _owner meta42900])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name examples.shared.utils/->t42899, :variadic false, :file "examples/shared/utils.cljs", :method-params ([inspector-view data _owner meta42900]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 12, :max-fixed-arity 4, :fn-var true, :arglists (quote ([inspector-view data _owner meta42900])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {pprint cljs.pprint, cljs.pprint cljs.pprint, om om.core, om.core om.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:class}, :order [:class]}, :doc nil}