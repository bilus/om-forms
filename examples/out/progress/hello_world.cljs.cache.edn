;; Analyzed by ClojureScript 0.0-3308
{:use-macros {html sablono.core, go cljs.core.async.macros}, :excludes #{}, :name progress.hello-world, :imports nil, :requires {f reforms.core, reforms.core reforms.core, om om.core, om.core om.core, sablono.core sablono.core, cljs.core.async cljs.core.async}, :uses {timeout cljs.core.async, <! cljs.core.async}, :defs {->t27502 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([simple-view data _owner meta27503])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name progress.hello-world/->t27502, :variadic false, :file "examples/progress/src/progress.cljs", :method-params ([simple-view data _owner meta27503]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 12, :max-fixed-arity 4, :fn-var true, :arglists (quote ([simple-view data _owner meta27503])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, main-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/progress/src/progress.cljs", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([app-state _owner]))}, :name progress.hello-world/main-view, :variadic false, :file "examples/progress/src/progress.cljs", :end-column 16, :method-params ([app-state _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app-state _owner]))}, ->t27505 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([simple-view data _owner meta27506])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name progress.hello-world/->t27505, :variadic false, :file "examples/progress/src/progress.cljs", :method-params ([simple-view data _owner meta27506]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 12, :max-fixed-arity 4, :fn-var true, :arglists (quote ([simple-view data _owner meta27506])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t27502 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name progress.hello-world/t27502, :file "examples/progress/src/progress.cljs", :type true, :anonymous true, :column 3, :line 12, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t27508 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name progress.hello-world/t27508, :file "examples/progress/src/progress.cljs", :type true, :anonymous true, :column 3, :line 25, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t27508 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta27509])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name progress.hello-world/->t27508, :variadic false, :file "examples/progress/src/progress.cljs", :method-params ([main-view app-state _owner meta27509]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 25, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta27509])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t27505 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name progress.hello-world/t27505, :file "examples/progress/src/progress.cljs", :type true, :anonymous true, :column 3, :line 12, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t27515 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view app-state _owner meta27516])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name progress.hello-world/->t27515, :variadic false, :file "examples/progress/src/progress.cljs", :method-params ([main-view app-state _owner meta27516]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 25, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view app-state _owner meta27516])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, simple-view {:protocol-inline nil, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/progress/src/progress.cljs", :line 10, :column 7, :end-line 10, :end-column 18, :arglists (quote ([data _owner]))}, :name progress.hello-world/simple-view, :variadic false, :file "examples/progress/src/progress.cljs", :end-column 18, :method-params ([data _owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data _owner]))}, app-state {:name progress.hello-world/app-state, :file "examples/progress/src/progress.cljs", :line 8, :column 1, :end-line 8, :end-column 15, :meta {:file "/Users/martinb/dev/clojure_apps/reforms/examples/progress/src/progress.cljs", :line 8, :column 6, :end-line 8, :end-column 15}}, t27515 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name progress.hello-world/t27515, :file "examples/progress/src/progress.cljs", :type true, :anonymous true, :column 3, :line 25, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, f reforms.core, reforms.core reforms.core, om om.core, om.core om.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:name :target :orientation-horizontal :data}, :order [:data :name :orientation-horizontal :target]}, :doc nil}